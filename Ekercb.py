import streamlit as st
import requests

# WordPress weboldal URL-je (a "/wp-json/wp/v2/posts" v√©gpont a cikkek lek√©rdez√©s√©hez)
WORDPRESS_API_URL = "https://www.egyenisegepites.hu/wp-json/wp/v2/posts"

# WordPress API-b√≥l cikkek lek√©r√©se
def get_wordpress_articles():
    response = requests.get(WORDPRESS_API_URL)
    if response.status_code == 200:
        return response.json()  # JSON form√°tumban visszaadja a cikkeket
    else:
        return []

# Keres√©s a cikkekben a felhaszn√°l√≥ k√©rd√©se alapj√°n
def search_articles(user_query, articles):
    relevant_articles = []
    for article in articles:
        title = article.get("title", {}).get("rendered", "")
        content = article.get("content", {}).get("rendered", "")
        
        if user_query.lower() in content.lower() or user_query.lower() in title.lower():
            relevant_articles.append(f"**{title}**\n\n{content[:300]}...")  # Az els≈ë 300 karaktert jelen√≠ti meg
        
    return relevant_articles if relevant_articles else ["Nincs tal√°lat a k√©rd√©sedre."]

# Streamlit fel√ºlet
st.title("üìñ WordPress Chatbot")
st.write("K√©rdezz b√°rmit a weboldal tartalma alapj√°n!")

user_input = st.text_input("√çrd be a k√©rd√©sed...")

if user_input:
    articles = get_wordpress_articles()
    search_results = search_articles(user_input, articles)
    for result in search_results:
        st.write(result)

from bs4 import BeautifulSoup

def clean_html(text):
    return BeautifulSoup(text, "html.parser").get_text()

def search_articles(user_query, articles):
    relevant_articles = []
    for article in articles:
        title = clean_html(article.get("title", {}).get("rendered", ""))
        content = clean_html(article.get("content", {}).get("rendered", ""))
        
        if user_query.lower() in content.lower() or user_query.lower() in title.lower():
            relevant_articles.append(f"**{title}**\n\n{content[:300]}...")  # Az els≈ë 300 karaktert jelen√≠ti meg
        
    return relevant_articles if relevant_articles else ["Nincs tal√°lat a k√©rd√©sedre."]

def search_articles(user_query, articles):
    results = []
    for article in articles:
        title = clean_html(article.get("title", {}).get("rendered", ""))
        content = clean_html(article.get("content", {}).get("rendered", ""))
        
        # Pontoz√°s: ha a keresett sz√≥ a c√≠mben van, nagyobb s√∫lyt kap
        score = 0
        if user_query.lower() in title.lower():
            score += 2
        if user_query.lower() in content.lower():
            score += 1
        
        if score > 0:
            results.append((score, f"**{title}**\n\n{content[:300]}..."))

    # A legrelev√°nsabb cikkek jelenjenek meg el≈ësz√∂r
    results.sort(reverse=True, key=lambda x: x[0])
    
    return [res[1] for res in results] if results else ["Nincs tal√°lat a k√©rd√©sedre."]

